// This file was automatically generated by tools/update-property-types.py
// All changes to this file will be lost

// This file will be included by Types.hpp

namespace vx {
namespace types {
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> BooleanType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> Box3DAxisAlignedType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> ColorType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> DataTypeType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> EnumerationType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> FileNameType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> FloatType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> GeometricPrimitiveType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> IntType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> IntListType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> LabelListType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> ListPosition3DType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType>
ListPosition3DDoubleTupleType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> NodeReferenceType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> NodeReferenceListType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> Orientation3DType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> OutputNodeReferenceType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> Point2DType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> Position3DType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> SizeInteger3DType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> StringType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> ThresholdLabelMappingType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType>
TomographyRawDataImageKindType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType>
TomographyRawDataImageListType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> ValueColorMappingType();
VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> VolumeIndexListType();

struct Boolean {
  typedef bool RawType;
  typedef bool QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct Box3DAxisAligned {
  typedef std::tuple<std::tuple<double, double, double>,
                     std::tuple<double, double, double>>
      RawType;
  typedef vx::BoundingBox3D QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct Color {
  typedef std::tuple<double, double, double, double> RawType;
  typedef vx::Color QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct DataType {
  typedef std::tuple<QString, quint32, QString> RawType;
  typedef vx::DataType QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct Enumeration {
  typedef QString RawType;
  typedef QString QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct FileName {
  typedef QString RawType;
  typedef QString QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct Float {
  typedef double RawType;
  typedef double QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct GeometricPrimitive {
  typedef quint64 RawType;
  typedef quint64 QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct Int {
  typedef qint64 RawType;
  typedef qint64 QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct IntList {
  typedef QList<qint64> RawType;
  typedef QList<qint64> QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct LabelList {
  typedef QList<quint64> RawType;
  typedef QList<quint64> QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct ListPosition3D {
  typedef QList<std::tuple<double, double, double>> RawType;
  typedef QList<QVector3D> QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct ListPosition3DDoubleTuple {
  typedef QList<std::tuple<std::tuple<double, double, double>, double>> RawType;
  typedef QList<std::tuple<QVector3D, double>> QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct NodeReference {
  typedef QDBusObjectPath RawType;
  typedef vx::Node* QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct NodeReferenceList {
  typedef QList<QDBusObjectPath> RawType;
  typedef QList<vx::Node*> QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct Orientation3D {
  typedef std::tuple<double, double, double, double> RawType;
  typedef QQuaternion QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct OutputNodeReference {
  typedef QDBusObjectPath RawType;
  typedef vx::Node* QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct Point2D {
  typedef std::tuple<double, double> RawType;
  typedef QPointF QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct Position3D {
  typedef std::tuple<double, double, double> RawType;
  typedef QVector3D QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct SizeInteger3D {
  typedef std::tuple<quint64, quint64, quint64> RawType;
  typedef Vector<quint64, 3> QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct String {
  typedef QString RawType;
  typedef QString QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct ThresholdLabelMapping {
  typedef QList<
      std::tuple<double, std::tuple<double, double, double, double>, qint64>>
      RawType;
  typedef QList<
      std::tuple<double, std::tuple<double, double, double, double>, qint64>>
      QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct TomographyRawDataImageKind {
  typedef QJsonObject RawType;
  typedef QJsonObject QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct TomographyRawDataImageList {
  typedef std::tuple<QString, QJsonObject> RawType;
  typedef std::tuple<QString, QJsonObject> QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct ValueColorMapping {
  typedef QList<
      std::tuple<double, std::tuple<double, double, double, double>, qint32>>
      RawType;
  typedef QList<vx::ColorizerEntry> QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
struct VolumeIndexList {
  typedef QList<std::tuple<quint32, quint32, quint32>> RawType;
  typedef QList<std::tuple<quint32, quint32, quint32>> QtType;
  static VOXIECORESHARED_EXPORT QSharedPointer<PropertyType> type();
};
}  // namespace types
}  // namespace vx
