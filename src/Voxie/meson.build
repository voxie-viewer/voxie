qt_modules = [
  'Core',
  'DBus',
  'Gui',
  'Widgets',
  'Network',
]
xcb_dep = declare_dependency()
if target_machine.system() == 'linux'
  qt_modules += [
    'X11Extras',
  ]
  xcb_dep = meson.get_compiler('c').find_library('xcb')
endif
# Note: moc does not like "include_type:'system'" because meson only considers -I and -D for moc, not -isystem: <https://github.com/mesonbuild/meson/blob/398df5629863e913fa603cbf02c525a9f501f8a8/mesonbuild/modules/qt.py#L193>. See also <https://github.com/mesonbuild/meson/pull/8139>. Note that currently voxie should compile even without this workaround, see update-dbus-proxies.py.
qt5_dep = dependency('qt5', modules : qt_modules, include_type : 'system')
qt5_dep_moc = dependency('qt5', modules : qt_modules)

moc_files = qt5.preprocess(
  ui_files : [
    'Gui/ObjectProperties.ui',
    'Gui/PointList.ui',
    'Gui/SliceFromPointsDialog.ui',
  ],
  moc_sources : [
  ],
  moc_headers : [
    'IVoxie.hpp',
    #'DebugOptions.hpp',
    #'MathQt.hpp',
    #'Util.hpp',
    #'Voxie.hpp',

    #'Component/HelpCommon.hpp',
    #'Component/Interfaces.hpp',
    'Component/MetaFilter2D.hpp',
    'Component/Plugin.hpp',
    'Component/Tool.hpp',

    #'Data/BoundingBox3D.hpp',
    #'Data/Color.hpp',
    #'Data/ColorInterpolator.hpp',
    'Data/Colorizer.hpp',
    #'Data/ColorizerEntry.hpp',
    'Data/EventListNode.hpp',
    'Data/GeometricPrimitiveObject.hpp',
    #'Data/ImageInterpolate.hpp',
    'Data/InitializeColorizeWorker.hpp',
    #'Data/LabelAttributes.hpp',
    'Data/LabelConstraint.hpp',
    #'Data/MetricUnit.hpp',
    'Data/PositionInterface.hpp',
    #'Data/PreviewBox.hpp',
    'Data/PropertySection.hpp',
    #'Data/Prototypes.forward.hpp',
    'Data/Prototypes.hpp',
    'Data/QuaternionWidget.hpp',
    #'Data/Range.hpp',
    'Data/TomographyRawDataNode.hpp',
    'Data/Slice.hpp',
    'Data/SurfaceBuilder.hpp',
    'Data/SurfaceNode.hpp',
    'Data/TableNode.hpp',
    #'Data/ContainerData.hpp',
    #'Data/ContainerNode.hpp',
    'Data/TableColumnListView.hpp',
    'Data/TableData.hpp',
    'Data/VolumeNode.hpp',
    'Data/LabelViewModel.hpp',

    'Gui/ColorizerGradientWidget.hpp',
    'Gui/ColorizerWidget.hpp',
    #'Gui/ErrorMessage.hpp',
    'Gui/EventListNodeView.hpp',
    'Gui/HelpBrowserBackend.hpp',
    'Gui/Int64SpinBox.hpp',
    #'Gui/MakeHandButton.hpp',
    'Gui/ObjectProperties.hpp',
    'Gui/PointList.hpp',
    'Gui/TomographyRawDataNodeView.hpp',
    'Gui/SliceFromPointsDialog.hpp',
    'Gui/UnitSpinBox.hpp',
    'Gui/VolumeNodeView.hpp',
    #'Gui/LabelTableView.hpp',


    #'Interfaces/SegmentationI.hpp',
    #'Interfaces/StepManagerI.hpp',
    #'Interfaces/SliceVisualizerI.hpp',

    'IO/RunFilterOperation.hpp',
    'IO/SaveFileDialog.hpp',

    'Node/DataNode.hpp',
    'Node/FilterNode.hpp',
    'Node/NodeGroup.hpp',
    'Node/Object3DNode.hpp',
    'Node/Node.hpp',
    'Node/SegmentationStep.hpp', 
    #'Node/NodeKind.hpp',
    'Node/NodeProperty.hpp',
    'Node/NodePrototype.hpp',
    #'Node/NodeTag.hpp',
    #'Node/ParameterCopy.hpp',
    #'Node/PropertyHelper.hpp',
    #'Node/PropertyNode.hpp',
    'Node/PropertyUI.hpp',
    #'Node/PropertyUIImplBase.hpp',
    #'Node/PropertyValueConvertDBus.hpp',
    #'Node/PropertyValueConvertRaw.hpp',
    #'Node/StringConversionHelper.hpp',
    #'Node/Types.hpp',

    'OldFilter/Filter2D.hpp',
    'OldFilter/FilterChain2D.hpp',

    #'OldFilterMask/ellipseData.hpp',
    #'OldFilterMask/ellipse.hpp',
    #'OldFilterMask/ImageComparator.hpp',
    #'OldFilterMask/polygonData.hpp',
    #'OldFilterMask/polygon.hpp',
    #'OldFilterMask/polygonPoint.hpp',
    #'OldFilterMask/rectangleData.hpp',
    #'OldFilterMask/rectangle.hpp',
    'OldFilterMask/Selection2DMask.hpp',
    #'OldFilterMask/shapes.hpp',
    #'OldFilterMask/test.hpp',

    'PropertyObjects/PlaneNode.hpp',
    #'PropertyObjects/PreviewBoxNode.hpp',

    'SpNav/SpaceNavClient.hpp',
    #'SpNav/SpaceNavEvent.hpp',
    'SpNav/SpaceNavVisualizer.hpp',

    'Vis/AdvancedSlider.hpp',
    'Vis/FilterChain2DWidget.hpp',
    'Vis/HistogramVisualizerWidget.hpp',
    'Vis/HistogramWidget.hpp',
    #'Vis/LabeledAxis.hpp',
    'Vis/OpenGLWidget.hpp',
    'Vis/QVecLineEdit.hpp',
    'Vis/View3D.hpp',
    'Vis/VisualizerNode.hpp',
    'Vis/VisualizerView.hpp',
  ],
  include_directories : [ project_incdir ],
  dependencies : qt5_dep_moc,
)

voxie = shared_library(
  'Voxie',
  [
    moc_files,

    'IVoxie.cpp',
    'DebugOptions.cpp',
    'MathQt.cpp',
    'Util.cpp',

    'Component/HelpCommon.cpp',
    'Component/MetaFilter2D.cpp',
    'Component/Plugin.cpp',
    'Component/Tool.cpp',

    'Data/BoundingBox3D.cpp',
    'Data/Color.cpp',
    'Data/ColorInterpolator.cpp',
    'Data/Colorizer.cpp',
    'Data/ColorizerEntry.cpp',
    'Data/EventListNode.cpp',
    'Data/GeometricPrimitiveObject.cpp',
    'Data/ImageInterpolate.cpp',
    'Data/InitializeColorizeWorker.cpp',
    'Data/LabelAttributes.cpp',
    'Data/LabelConstraint.cpp',
    'Data/MetricUnit.cpp',
    'Data/PositionInterface.cpp',
    'Data/PreviewBox.cpp',
    'Data/PropertySection.cpp',
    'Data/Prototypes.cpp',
    'Data/QuaternionWidget.cpp',
    'Data/TomographyRawDataNode.cpp',
    'Data/Slice.cpp',
    'Data/SurfaceBuilder.cpp',
    'Data/SurfaceNode.cpp',
    'Data/TableNode.cpp',
    'Data/ContainerData.cpp',
    'Data/ContainerNode.cpp',
    'Data/TableColumnListView.cpp',
    'Data/TableData.cpp',
    'Data/VolumeNode.cpp',
    'Data/LabelViewModel.cpp',

    'Gui/ColorizerGradientWidget.cpp',
    'Gui/ColorizerWidget.cpp',
    'Gui/ErrorMessage.cpp',
    'Gui/EventListNodeView.cpp',
    'Gui/HelpBrowserBackend.cpp',
    'Gui/Int64SpinBox.cpp',
    'Gui/MakeHandButton.cpp',
    'Gui/ObjectProperties.cpp',
    'Gui/PointList.cpp',
    'Gui/TomographyRawDataNodeView.cpp',
    'Gui/SliceFromPointsDialog.cpp',
    'Gui/UnitSpinBox.cpp',
    'Gui/VolumeNodeView.cpp',

    'Interfaces/SegmentationI.cpp',
    'Interfaces/StepManagerI.cpp',
    'Interfaces/SliceVisualizerI.cpp',

    'IO/RunFilterOperation.cpp',
    'IO/SaveFileDialog.cpp',

    'Node/DataNode.cpp',
    'Node/FilterNode.cpp',
    'Node/NodeGroup.cpp',
    'Node/Node.cpp',
    'Node/Object3DNode.cpp',
    'Node/NodeKind.cpp',
    'Node/NodeProperty.cpp',
    'Node/NodePrototype.cpp',
    'Node/NodeTag.cpp',
    'Node/ParameterCopyBase.cpp',
    'Node/WeakParameterCopy.cpp',
    'Node/ParameterCopy.cpp',
    'Node/PropertyHelper.cpp',
    'Node/PropertyNode.cpp',
    'Node/PropertyUI.cpp',
    'Node/PropertyUIImplBase.cpp',
    'Node/PropertyValueConvertDBus.cpp',
    'Node/PropertyValueConvertRaw.cpp',
    'Node/Types.cpp',
    'Node/SegmentationStep.cpp', 

    'OldFilter/Filter2D.cpp',
    'OldFilter/FilterChain2D.cpp',

    'OldFilterMask/ImageComparator.cpp',
    'OldFilterMask/Selection2DMask.cpp',
    'OldFilterMask/ellipse.cpp',
    'OldFilterMask/polygon.cpp',
    'OldFilterMask/rectangle.cpp',
    'OldFilterMask/shapes.cpp',
    'OldFilterMask/test.cpp',

    'PropertyObjects/PlaneNode.cpp',
    'PropertyObjects/PreviewBoxNode.cpp',

    'SpNav/SpaceNavClient.cpp',
    'SpNav/SpaceNavClientUnix.cpp',
    'SpNav/SpaceNavClientX11.cpp',
    'SpNav/SpaceNavEvent.cpp',
    'SpNav/SpaceNavVisualizer.cpp',

    'Vis/AdvancedSlider.cpp',
    'Vis/FilterChain2DWidget.cpp',
    'Vis/HistogramVisualizerWidget.cpp',
    'Vis/HistogramWidget.cpp',
    'Vis/LabeledAxis.cpp',
    'Vis/OpenGLWidget.cpp',
    'Vis/QVecLineEdit.cpp',
    'Vis/View3D.cpp',
    'Vis/VisualizerNode.cpp',
    'Vis/VisualizerView.cpp',
  ],
  include_directories : [
    project_incdir,
    opencl_incdir,
  ],
  implicit_include_directories : false,
  dependencies : [
    qt5_dep,
    xcb_dep,
    voxiebackend_dep,
  ],
  cpp_args : [ '-DVOXIECORE_LIBRARY' ],
  install : true,
  install_dir : lib_install_dir,
)

libvoxie_dep = declare_dependency(
  include_directories : [
    project_incdir,
  ],
  link_with : [
    voxie,
  ],
  dependencies : [
    voxiebackend_dep,
  ],
)

# TODO: Install headers?
